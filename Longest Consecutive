/*
Coderbyte coding challenge: Longest Consecutive

Have the function LongestConsecutive(arr) take the array
of positive integers stored in arr and return the length of the longest
consecutive subsequence (LCS). An LCS is a subset of the original list where the
numbers are in sorted order, from lowest to highest, and are in a consecutive,
increasing order. The sequence does not need to be contiguous and there can be
several different subsequences. For example: if arr is [4, 3, 8, 1, 2, 6, 100,
9] then a few consecutive sequences are [1, 2, 3, 4], and [8, 9]. For this
input, your program should return 4 because that is the length of the longest
consecutive subsequence.

Sample test cases:

Input:  6, 7, 3, 1, 100, 102, 6, 12
Output: 2

Input:  5, 6, 1, 2, 8, 9, 7
Output: 5
*/


using System;

namespace MyApp
{
    internal class Program
    {
        static void Main(string[] args)
        {
            prime();
        }

        static void prime()
        {
            int[] arr = { 1,2,2,4,9,8,7,6 };
            int longest = 1;
            int current = 1;
            Array.Sort(arr);
            for (int i = 1; i < arr.Length; i++)
            {
                if (arr[i] == arr[i-1]+1)
                {
                    current++;
                }
                else if (arr[i] != arr[i - 1]+1)
                {
                    longest=Math.Max(longest,current);
                    current = 1;
                }
            }
            longest = Math.Max(longest, current);
            Console.WriteLine(longest);
        }
    }
}
